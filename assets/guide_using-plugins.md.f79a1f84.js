import{o as n,c as a,a as s}from"./app.a2203fca.js";const e='{"title":"使用插件","description":"","frontmatter":{"title":"使用插件"},"headers":[{"level":2,"title":"添加一个插件","slug":"adding-a-plugin"},{"level":2,"title":"查找插件","slug":"finding-plugins"},{"level":2,"title":"强制插件排序","slug":"enforcing-plugin-ordering"},{"level":2,"title":"按需应用","slug":"conditional-application"},{"level":2,"title":"创建插件","slug":"building-plugins"}],"relativePath":"guide/using-plugins.md","lastUpdated":1627281282085}',p={},t=s('<h1 id="using-plugins"><a class="header-anchor" href="#using-plugins" aria-hidden="true">#</a> 使用插件</h1><p>Vite 可以使用插件进行扩展，这得益于 Rollup 优秀的插件接口设计和一部分 Vite 独有的额外选项。这意味着 Vite 用户可以利用 Rollup 插件的强大生态系统，同时根据需要也能够扩展开发服务器和 SSR 功能。</p><h2 id="adding-a-plugin"><a class="header-anchor" href="#adding-a-plugin" aria-hidden="true">#</a> 添加一个插件</h2><p>若要使用一个插件，需要将它添加到项目的 <code>devDependencies</code> 并在 <code>vite.config.js</code> 配置文件中的 <code>plugins</code> 数组中引入它。例如，要想为传统浏览器提供支持，可以按下面这样使用官方插件 <a href="https://github.com/vitejs/vite/tree/main/packages/plugin-legacy" target="_blank" rel="noopener noreferrer">@vitejs/plugin-legacy</a>：</p><div class="language-"><pre><code>$ npm i -D @vitejs/plugin-legacy\n</code></pre></div><div class="language-js"><pre><code><span class="token comment">// vite.config.js</span>\n<span class="token keyword">import</span> legacy <span class="token keyword">from</span> <span class="token string">&#39;@vitejs/plugin-legacy&#39;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token function">legacy</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      targets<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;defaults&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;not IE 11&#39;</span><span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p><code>plugins</code> 也可以接受包含多个插件作为单个元素的预设。这对于使用多个插件实现的复杂特性（如框架集成）很有用。该数组将在内部被扁平化。</p><p>Falsy 虚值的插件将被忽略，可以用来轻松地启用或停用插件。</p><h2 id="finding-plugins"><a class="header-anchor" href="#finding-plugins" aria-hidden="true">#</a> 查找插件</h2><div class="tip custom-block"><p class="custom-block-title">注意</p><p>Vite 旨在为常见的 Web 开发范式提供开箱即用的支持。在寻找一个 Vite 或兼容的 Rollup 插件之前，请先查看 <a href="./../guide/features.html">功能指引</a>。大量在 Rollup 项目中需要使用插件的用例在 Vite 中已经覆盖到了。</p></div><p>查看 <a href="./../plugins/">Plugins 章节</a> 获取官方插件信息。社区插件列表请参见 <a href="https://github.com/vitejs/awesome-vite#plugins" target="_blank" rel="noopener noreferrer">awesome-vite</a>。而对于兼容的 Rollup 插件，请查看 <a href="https://vite-rollup-plugins.patak.dev" target="_blank" rel="noopener noreferrer">Vite Rollup 插件</a> 获取一个带使用说明的兼容 Rollup 官方插件列表，若列表中没有找到，则请参阅 <a href="./../guide/api-plugin.html#rollup-plugin-compatibility">Rollup 插件兼容性章节</a>。</p><p>你也可以使用此 <a href="https://www.npmjs.com/search?q=vite-plugin&amp;ranking=popularity" target="_blank" rel="noopener noreferrer">npm Vite 插件搜索链接</a> 来找到一些遵循了 <a href="./api-plugin.html#conventions">推荐约定</a> 的 Vite 插件，或者此 <a href="https://www.npmjs.com/search?q=rollup-plugin&amp;ranking=popularity" target="_blank" rel="noopener noreferrer">npm Rollup 插件搜索链接</a> 获取 Rollup 插件。</p><h2 id="enforcing-plugin-ordering"><a class="header-anchor" href="#enforcing-plugin-ordering" aria-hidden="true">#</a> 强制插件排序</h2><p>为了与某些 Rollup 插件兼容，可能需要强制执行插件的顺序，或者只在构建时使用。这应该是 Vite 插件的实现细节。可以使用 <code>enforce</code> 修饰符来强制插件的位置:</p><ul><li><code>pre</code>：在 Vite 核心插件之前调用该插件</li><li>默认：在 Vite 核心插件之后调用该插件</li><li><code>post</code>：在 Vite 构建插件之后调用该插件</li></ul><div class="language-js"><pre><code><span class="token comment">// vite.config.js</span>\n<span class="token keyword">import</span> image <span class="token keyword">from</span> <span class="token string">&#39;@rollup/plugin-image&#39;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token operator">...</span><span class="token function">image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      enforce<span class="token operator">:</span> <span class="token string">&#39;pre&#39;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>查看 <a href="./api-plugin.html#plugin-ordering">Plugins API Guide</a> 获取细节信息，并在 <a href="https://vite-rollup-plugins.patak.dev" target="_blank" rel="noopener noreferrer">Vite Rollup 插件</a> 兼容性列表中注意 <code>enforce</code> 标签和流行插件的使用说明。</p><h2 id="conditional-application"><a class="header-anchor" href="#conditional-application" aria-hidden="true">#</a> 按需应用</h2><p>默认情况下插件在开发 (serve) 和生产 (build) 模式中都会调用。如果插件在服务或构建期间按需使用，请使用 <code>apply</code> 属性指明它们仅在 <code>&#39;build&#39;</code> 或 <code>&#39;serve&#39;</code> 模式时调用：</p><div class="language-js"><pre><code><span class="token comment">// vite.config.js</span>\n<span class="token keyword">import</span> typescript2 <span class="token keyword">from</span> <span class="token string">&#39;rollup-plugin-typescript2&#39;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token operator">...</span><span class="token function">typescript2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      apply<span class="token operator">:</span> <span class="token string">&#39;build&#39;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="building-plugins"><a class="header-anchor" href="#building-plugins" aria-hidden="true">#</a> 创建插件</h2><p>阅读 <a href="./api-plugin.html">插件 API 指引</a> 文档了解如何创建插件。</p>',22);p.render=function(s,e,p,o,l,i){return n(),a("div",null,[t])};export default p;export{e as __pageData};
