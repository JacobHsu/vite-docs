import{o as n,c as e,d as l,e as s}from"./app.a2203fca.js";const a='{"title":"部署静态站点","description":"","frontmatter":{"title":"部署静态站点"},"headers":[{"level":2,"title":"构建应用","slug":"building-the-app"},{"level":3,"title":"本地测试应用","slug":"testing-the-app-locally"},{"level":2,"title":"GitHub Pages","slug":"github-pages"},{"level":3,"title":"GitHub Pages 配合 Travis CI","slug":"github-pages-and-travis-ci"},{"level":2,"title":"GitLab Pages 配合 GitLab CI","slug":"gitlab-pages-and-gitlab-ci"},{"level":2,"title":"Netlify","slug":"netlify"},{"level":2,"title":"Google Firebase","slug":"google-firebase"},{"level":2,"title":"Surge","slug":"surge"},{"level":2,"title":"Heroku","slug":"heroku"},{"level":2,"title":"Vercel","slug":"vercel"},{"level":2,"title":"Azure 的静态网站应用","slug":"azure-static-web-apps"}],"relativePath":"guide/static-deploy.md","lastUpdated":1631082445889}',t={},o=l("h1",{id:"deploying-a-static-site"},[l("a",{class:"header-anchor",href:"#deploying-a-static-site","aria-hidden":"true"},"#"),s(" 部署静态站点")],-1),u=l("p",null,"本指南建立在以下几个假设基础之上：",-1),r=l("ul",null,[l("li",null,[s("你正在使用的是默认的构建输出路径（"),l("code",null,"dist"),s("）。这个路径 "),l("a",{href:"/config/#build-outdir"},[s("可以通过 "),l("code",null,"build.outDir"),s(" 更改")]),s("，在这种情况下，你可以从这篇指南中找到出所需的指引。")]),l("li",null,"你正在使用 NPM；或者 Yarn 等其他可以运行下面的脚本指令的包管理工具。"),l("li",null,"Vite 已作为一个本地开发依赖（dev dependency）安装在你的项目中，并且你已经配置好了如下的 npm scripts：")],-1),c=l("div",{class:"language-json"},[l("pre",null,[l("code",null,[l("span",{class:"token punctuation"},"{"),s("\n  "),l("span",{class:"token property"},'"scripts"'),l("span",{class:"token operator"},":"),s(),l("span",{class:"token punctuation"},"{"),s("\n    "),l("span",{class:"token property"},'"build"'),l("span",{class:"token operator"},":"),s(),l("span",{class:"token string"},'"vite build"'),l("span",{class:"token punctuation"},","),s("\n    "),l("span",{class:"token property"},'"preview"'),l("span",{class:"token operator"},":"),s(),l("span",{class:"token string"},'"vite preview"'),s("\n  "),l("span",{class:"token punctuation"},"}"),s("\n"),l("span",{class:"token punctuation"},"}"),s("\n")])])],-1),i=l("p",null,[s("值得注意的是 "),l("code",null,"vite preview"),s(" 用作预览本地构建，而不应直接作为生产服务器。")],-1),p=l("div",{class:"tip custom-block"},[l("p",{class:"custom-block-title"},"注意"),l("p",null,[s("本篇指南提供了部署 Vite 静态站点的说明。Vite 也对服务端渲染（SSR）有了实验性的支持。SSR 是指支持在 Node 中运行相应应用的前端框架，预渲染成 HTML，最后在客户端激活（hydrate）。查看 "),l("a",{href:"./ssr.html"},"SSR 指南"),s(" 了解更多细节。另一方面，如果你在寻找与传统服务端框架集成的方式，那么请查看 "),l("a",{href:"./backend-integration.html"},"后端集成"),s(" 章节。")])],-1),d=l("h2",{id:"building-the-app"},[l("a",{class:"header-anchor",href:"#building-the-app","aria-hidden":"true"},"#"),s(" 构建应用")],-1),k=l("p",null,[s("你可以运行 "),l("code",null,"npm run build"),s(" 命令来执行应用的构建。")],-1),h=l("div",{class:"language-bash"},[l("pre",null,[l("code",null,[s("$ "),l("span",{class:"token function"},"npm"),s(" run build\n")])])],-1),g=l("p",null,[s("默认情况下，构建会输出到 "),l("code",null,"dist"),s(" 文件夹中。你可以部署这个 "),l("code",null,"dist"),s(" 文件夹到任何你喜欢的平台。")],-1),b=l("h3",{id:"testing-the-app-locally"},[l("a",{class:"header-anchor",href:"#testing-the-app-locally","aria-hidden":"true"},"#"),s(" 本地测试应用")],-1),m=l("p",null,[s("当你构建完成应用后，你可以通过运行 "),l("code",null,"npm run preview"),s(" 命令，在本地测试该应用。")],-1),f=l("div",{class:"language-bash"},[l("pre",null,[l("code",null,[s("$ "),l("span",{class:"token function"},"npm"),s(" run build\n$ "),l("span",{class:"token function"},"npm"),s(" run preview\n")])])],-1),v=l("p",null,[l("code",null,"preview"),s(" 命令会在本地启动一个静态 Web 服务器，将 "),l("code",null,"dist"),s(" 文件夹运行在 "),l("a",{href:"http://localhost:5000",target:"_blank",rel:"noopener noreferrer"},"http://localhost:5000"),s("。这样在本地环境下查看该构建产物是否正常可用就方便了。")],-1),y=l("p",null,[s("你可以通过 "),l("code",null,"--port"),s(" 参数来配置服务的运行端口。")],-1),E=l("div",{class:"language-json"},[l("pre",null,[l("code",null,[l("span",{class:"token punctuation"},"{"),s("\n  "),l("span",{class:"token property"},'"scripts"'),l("span",{class:"token operator"},":"),s(),l("span",{class:"token punctuation"},"{"),s("\n    "),l("span",{class:"token property"},'"preview"'),l("span",{class:"token operator"},":"),s(),l("span",{class:"token string"},'"vite preview --port 8080"'),s("\n  "),l("span",{class:"token punctuation"},"}"),s("\n"),l("span",{class:"token punctuation"},"}"),s("\n")])])],-1),R=l("p",null,[s("现在 "),l("code",null,"preview"),s(" 命令会将服务器运行在 "),l("a",{href:"http://localhost:8080",target:"_blank",rel:"noopener noreferrer"},"http://localhost:8080"),s("。")],-1),_=l("h2",{id:"github-pages"},[l("a",{class:"header-anchor",href:"#github-pages","aria-hidden":"true"},"#"),s(" GitHub Pages")],-1),A=l("ol",null,[l("li",null,[l("p",null,[s("在 "),l("code",null,"vite.config.js"),s(" 中设置正确的 "),l("code",null,"base"),s("。")]),l("p",null,[s("如果你要部署在 "),l("code",null,"https://<USERNAME>.github.io/"),s(" 上，你可以省略 "),l("code",null,"base"),s(" 使其默认为 "),l("code",null,"'/'"),s("。")]),l("p",null,[s("如果你要部署在 "),l("code",null,"https://<USERNAME>.github.io/<REPO>/"),s(" 上，例如你的仓库地址为 "),l("code",null,"https://github.com/<USERNAME>/<REPO>"),s("，那么请设置 "),l("code",null,"base"),s(" 为 "),l("code",null,"'/<REPO>/'"),s("。")])]),l("li",null,[l("p",null,[s("在你的项目中，创建一个 "),l("code",null,"deploy.sh"),s(" 脚本，包含以下内容（注意高亮的行，按需使用），运行脚本来部署站点：")]),l("div",{class:"language-bash"},[l("div",{class:"highlight-lines"},[l("br"),l("br"),l("br"),l("br"),l("br"),l("br"),l("br"),l("br"),l("br"),l("br"),l("br"),l("br"),l("div",{class:"highlighted"}," "),l("br"),l("br"),l("br"),l("br"),l("br"),l("br"),l("div",{class:"highlighted"}," "),l("br"),l("br"),l("div",{class:"highlighted"}," "),l("br"),l("br"),l("br")]),l("pre",null,[l("code",null,[l("span",{class:"token shebang important"},"#!/usr/bin/env sh"),s("\n\n"),l("span",{class:"token comment"},"# 发生错误时终止"),s("\n"),l("span",{class:"token builtin class-name"},"set"),s(" -e\n\n"),l("span",{class:"token comment"},"# 构建"),s("\n"),l("span",{class:"token function"},"npm"),s(" run build\n\n"),l("span",{class:"token comment"},"# 进入构建文件夹"),s("\n"),l("span",{class:"token builtin class-name"},"cd"),s(" dist\n\n"),l("span",{class:"token comment"},"# 如果你要部署到自定义域名"),s("\n"),l("span",{class:"token comment"},"# echo 'www.example.com' > CNAME"),s("\n\n"),l("span",{class:"token function"},"git"),s(" init\n"),l("span",{class:"token function"},"git"),s(),l("span",{class:"token function"},"add"),s(" -A\n"),l("span",{class:"token function"},"git"),s(" commit -m "),l("span",{class:"token string"},"'deploy'"),s("\n\n"),l("span",{class:"token comment"},"# 如果你要部署在 https://<USERNAME>.github.io"),s("\n"),l("span",{class:"token comment"},"# git push -f git@github.com:<USERNAME>/<USERNAME>.github.io.git master"),s("\n\n"),l("span",{class:"token comment"},"# 如果你要部署在 https://<USERNAME>.github.io/<REPO>"),s("\n"),l("span",{class:"token comment"},"# git push -f git@github.com:<USERNAME>/<REPO>.git master:gh-pages"),s("\n\n"),l("span",{class:"token builtin class-name"},"cd"),s(" -\n")])])])])],-1),S=l("div",{class:"tip custom-block"},[l("p",{class:"custom-block-title"},"TIP"),l("p",null,"你也可以在你的 CI 中配置该脚本，使得在每次推送代码时自动部署。")],-1),G=l("h3",{id:"github-pages-and-travis-ci"},[l("a",{class:"header-anchor",href:"#github-pages-and-travis-ci","aria-hidden":"true"},"#"),s(" GitHub Pages 配合 Travis CI")],-1),P=l("ol",null,[l("li",null,[l("p",null,[s("在 "),l("code",null,"vite.config.js"),s(" 中设置正确的 "),l("code",null,"base"),s("。")]),l("p",null,[s("如果你要部署在 "),l("code",null,"https://<USERNAME or GROUP>.github.io/"),s(" 上，你可以省略 "),l("code",null,"base"),s(" 使其默认为 "),l("code",null,"'/'"),s("。")]),l("p",null,[s("如果你要部署在 "),l("code",null,"https://<USERNAME or GROUP>.github.io/<REPO>/"),s("，例如你的仓库地址为 "),l("code",null,"https://github.com/<USERNAME>/<REPO>"),s("，那么请设置 "),l("code",null,"base"),s(" 为 "),l("code",null,"'/<REPO>/'"),s("。")])]),l("li",null,[l("p",null,[s("在项目根目录创建一个 "),l("code",null,".travis.yml"),s(" 文件")])]),l("li",null,[l("p",null,[s("在本地运行 "),l("code",null,"npm install"),s(" 并且提交（commit）生成的 lockfile ("),l("code",null,"package-lock.json"),s(")。")])]),l("li",null,[l("p",null,[s("使用 GitHub Pages 部署的配置文件模板，并按照 "),l("a",{href:"https://docs.travis-ci.com/user/deployment/pages/",target:"_blank",rel:"noopener noreferrer"},"Travis CI 文档"),s(" 进行配置：")]),l("div",{class:"language-yaml"},[l("pre",null,[l("code",null,[l("span",{class:"token key atrule"},"language"),l("span",{class:"token punctuation"},":"),s(" node_js\n"),l("span",{class:"token key atrule"},"node_js"),l("span",{class:"token punctuation"},":"),s("\n  "),l("span",{class:"token punctuation"},"-"),s(" lts/*\n"),l("span",{class:"token key atrule"},"install"),l("span",{class:"token punctuation"},":"),s("\n  "),l("span",{class:"token punctuation"},"-"),s(" npm ci\n"),l("span",{class:"token key atrule"},"script"),l("span",{class:"token punctuation"},":"),s("\n  "),l("span",{class:"token punctuation"},"-"),s(" npm run build\n"),l("span",{class:"token key atrule"},"deploy"),l("span",{class:"token punctuation"},":"),s("\n  "),l("span",{class:"token key atrule"},"provider"),l("span",{class:"token punctuation"},":"),s(" pages\n  "),l("span",{class:"token key atrule"},"skip_cleanup"),l("span",{class:"token punctuation"},":"),s(),l("span",{class:"token boolean important"},"true"),s("\n  "),l("span",{class:"token key atrule"},"local_dir"),l("span",{class:"token punctuation"},":"),s(" dist\n  "),l("span",{class:"token comment"},"# 在 GitHub 上生成的 token，允许 Travis 推送代码到你的仓库。"),s("\n  "),l("span",{class:"token comment"},"# 在仓库的 Travis 设置页面，设为安全的环境变量"),s("\n  "),l("span",{class:"token key atrule"},"github_token"),l("span",{class:"token punctuation"},":"),s(" $GITHUB_TOKEN\n  "),l("span",{class:"token key atrule"},"keep_history"),l("span",{class:"token punctuation"},":"),s(),l("span",{class:"token boolean important"},"true"),s("\n  "),l("span",{class:"token key atrule"},"on"),l("span",{class:"token punctuation"},":"),s("\n    "),l("span",{class:"token key atrule"},"branch"),l("span",{class:"token punctuation"},":"),s(" master\n")])])])])],-1),w=l("h2",{id:"gitlab-pages-and-gitlab-ci"},[l("a",{class:"header-anchor",href:"#gitlab-pages-and-gitlab-ci","aria-hidden":"true"},"#"),s(" GitLab Pages 配合 GitLab CI")],-1),N=l("ol",null,[l("li",null,[l("p",null,[s("在 "),l("code",null,"vite.config.js"),s(" 中设置正确的 "),l("code",null,"base"),s("。")]),l("p",null,[s("如果你要部署在 "),l("code",null,"https://<USERNAME or GROUP>.gitlab.io/"),s(" 上，你可以省略 "),l("code",null,"base"),s(" 使其默认为 "),l("code",null,"'/'"),s("。")]),l("p",null,[s("如果你要部署在 "),l("code",null,"https://<USERNAME or GROUP>.gitlab.io/<REPO>/"),s(" 上，例如你的仓库地址为 "),l("code",null,"https://gitlab.com/<USERNAME>/<REPO>"),s("，那么请设置 "),l("code",null,"base"),s(" 为 "),l("code",null,"'/<REPO>/'"),s("。")])]),l("li",null,[l("p",null,[s("在 "),l("code",null,"vite.config.js"),s(" 中设置 "),l("code",null,"build.outDir"),s(" 为 "),l("code",null,"public"),s("。")])]),l("li",null,[l("p",null,[s("在项目根目录创建一个 "),l("code",null,".gitlab-ci.yml"),s(" 文件，并包含以下内容。它将使得每次你更改内容时都重新构建与部署站点：")]),l("div",{class:"language-yaml"},[l("pre",null,[l("code",null,[l("span",{class:"token key atrule"},"image"),l("span",{class:"token punctuation"},":"),s(" node"),l("span",{class:"token punctuation"},":"),s("10.22.0\n"),l("span",{class:"token key atrule"},"pages"),l("span",{class:"token punctuation"},":"),s("\n  "),l("span",{class:"token key atrule"},"cache"),l("span",{class:"token punctuation"},":"),s("\n    "),l("span",{class:"token key atrule"},"paths"),l("span",{class:"token punctuation"},":"),s("\n      "),l("span",{class:"token punctuation"},"-"),s(" node_modules/\n  "),l("span",{class:"token key atrule"},"script"),l("span",{class:"token punctuation"},":"),s("\n    "),l("span",{class:"token punctuation"},"-"),s(" npm install\n    "),l("span",{class:"token punctuation"},"-"),s(" npm run build\n  "),l("span",{class:"token key atrule"},"artifacts"),l("span",{class:"token punctuation"},":"),s("\n    "),l("span",{class:"token key atrule"},"paths"),l("span",{class:"token punctuation"},":"),s("\n      "),l("span",{class:"token punctuation"},"-"),s(" public\n  "),l("span",{class:"token key atrule"},"only"),l("span",{class:"token punctuation"},":"),s("\n    "),l("span",{class:"token punctuation"},"-"),s(" master\n")])])])])],-1),U=l("h2",{id:"netlify"},[l("a",{class:"header-anchor",href:"#netlify","aria-hidden":"true"},"#"),s(" Netlify")],-1),j=l("ol",null,[l("li",null,[l("p",null,[s("在 "),l("a",{href:"https://netlify.com",target:"_blank",rel:"noopener noreferrer"},"Netlify"),s(" 上，使用以下设置，配置一个来自 GitHub 的项目：")]),l("ul",null,[l("li",null,[l("strong",null,"构建命令："),s(),l("code",null,"vite build"),s(" 或 "),l("code",null,"npm run build")]),l("li",null,[l("strong",null,"发布目录："),s(),l("code",null,"dist")])])]),l("li",null,[l("p",null,"点击部署按钮。")])],-1),H=l("h2",{id:"google-firebase"},[l("a",{class:"header-anchor",href:"#google-firebase","aria-hidden":"true"},"#"),s(" Google Firebase")],-1),M=l("ol",null,[l("li",null,[l("p",null,[s("确保已经安装 "),l("a",{href:"https://www.npmjs.com/package/firebase-tools",target:"_blank",rel:"noopener noreferrer"},"firebase-tools"),s("。")])]),l("li",null,[l("p",null,[s("在项目根目录创建 "),l("code",null,"firebase.json"),s(" 和 "),l("code",null,".firebaserc"),s(" 两个文件，包含以下内容：")]),l("p",null,[l("code",null,"firebase.json"),s(":")]),l("div",{class:"language-json"},[l("pre",null,[l("code",null,[l("span",{class:"token punctuation"},"{"),s("\n  "),l("span",{class:"token property"},'"hosting"'),l("span",{class:"token operator"},":"),s(),l("span",{class:"token punctuation"},"{"),s("\n    "),l("span",{class:"token property"},'"public"'),l("span",{class:"token operator"},":"),s(),l("span",{class:"token string"},'"dist"'),l("span",{class:"token punctuation"},","),s("\n    "),l("span",{class:"token property"},'"ignore"'),l("span",{class:"token operator"},":"),s(),l("span",{class:"token punctuation"},"["),l("span",{class:"token punctuation"},"]"),s("\n  "),l("span",{class:"token punctuation"},"}"),s("\n"),l("span",{class:"token punctuation"},"}"),s("\n")])])]),l("p",null,[l("code",null,".firebaserc"),s(":")]),l("div",{class:"language-js"},[l("pre",null,[l("code",null,[l("span",{class:"token punctuation"},"{"),s("\n "),l("span",{class:"token string"},'"projects"'),l("span",{class:"token operator"},":"),s(),l("span",{class:"token punctuation"},"{"),s("\n   "),l("span",{class:"token string"},'"default"'),l("span",{class:"token operator"},":"),s(),l("span",{class:"token string"},'"<YOUR_FIREBASE_ID>"'),s("\n "),l("span",{class:"token punctuation"},"}"),s("\n"),l("span",{class:"token punctuation"},"}"),s("\n")])])])]),l("li",null,[l("p",null,[s("运行 "),l("code",null,"npm run build"),s(" 后，通过 "),l("code",null,"firebase deploy"),s(" 命令部署。")])])],-1),O=l("h2",{id:"surge"},[l("a",{class:"header-anchor",href:"#surge","aria-hidden":"true"},"#"),s(" Surge")],-1),$=l("ol",null,[l("li",null,[l("p",null,[s("首先确保已经安装 "),l("a",{href:"https://www.npmjs.com/package/surge",target:"_blank",rel:"noopener noreferrer"},"surge"),s("。")])]),l("li",null,[l("p",null,[s("运行 "),l("code",null,"npm run build"),s("。")])]),l("li",null,[l("p",null,[s("运行 "),l("code",null,"surge dist"),s(" 命令部署到 surge。")])])],-1),z=l("p",null,[s("你也可以通过添加 "),l("code",null,"surge dist yourdomain.com"),s(" 部署到一个 "),l("a",{href:"http://surge.sh/help/adding-a-custom-domain",target:"_blank",rel:"noopener noreferrer"},"自定义域名"),s("。")],-1),I=l("h2",{id:"heroku"},[l("a",{class:"header-anchor",href:"#heroku","aria-hidden":"true"},"#"),s(" Heroku")],-1),V=l("ol",null,[l("li",null,[l("p",null,[s("安装 "),l("a",{href:"https://devcenter.heroku.com/articles/heroku-cli",target:"_blank",rel:"noopener noreferrer"},"Heroku CLI"),s("。")])]),l("li",null,[l("p",null,[l("a",{href:"https://signup.heroku.com",target:"_blank",rel:"noopener noreferrer"},"注册"),s("一个 Heroku 账号。")])]),l("li",null,[l("p",null,[s("运行 "),l("code",null,"heroku login"),s(" 并填入你的 Heroku 凭证：")]),l("div",{class:"language-bash"},[l("pre",null,[l("code",null,"$ heroku login\n")])])]),l("li",null,[l("p",null,[s("在项目根目录创建一个 "),l("code",null,"static.json"),s(" ，包含以下内容：")]),l("p",null,[l("code",null,"static.json"),s(":")]),l("div",{class:"language-json"},[l("pre",null,[l("code",null,[l("span",{class:"token punctuation"},"{"),s("\n  "),l("span",{class:"token property"},'"root"'),l("span",{class:"token operator"},":"),s(),l("span",{class:"token string"},'"./dist"'),s("\n"),l("span",{class:"token punctuation"},"}"),s("\n")])])]),l("p",null,[s("这是你站点的配置，阅读 "),l("a",{href:"https://github.com/heroku/heroku-buildpack-static",target:"_blank",rel:"noopener noreferrer"},"heroku-buildpack-static"),s(" 文档来了解更多。")])]),l("li",null,[l("p",null,"配置好你的 Heroku git 远程地址："),l("div",{class:"language-bash"},[l("pre",null,[l("code",null,[l("span",{class:"token comment"},"# 版本变更"),s("\n$ "),l("span",{class:"token function"},"git"),s(" init\n$ "),l("span",{class:"token function"},"git"),s(),l("span",{class:"token function"},"add"),s(),l("span",{class:"token builtin class-name"},"."),s("\n$ "),l("span",{class:"token function"},"git"),s(" commit -m "),l("span",{class:"token string"},'"My site ready for deployment."'),s("\n\n"),l("span",{class:"token comment"},"# 创建一个具有指定名称的新应用"),s("\n$ heroku apps:create example\n\n"),l("span",{class:"token comment"},"# 为静态站点设置 buildpack"),s("\n$ heroku buildpacks:set https://github.com/heroku/heroku-buildpack-static.git\n")])])])]),l("li",null,[l("p",null,"部署站点："),l("div",{class:"language-bash"},[l("pre",null,[l("code",null,[l("span",{class:"token comment"},"# 发布站点"),s("\n$ "),l("span",{class:"token function"},"git"),s(" push heroku master\n\n"),l("span",{class:"token comment"},"# 在浏览器中打开 Heroku 的面板"),s("\n$ heroku "),l("span",{class:"token function"},"open"),s("\n")])])])])],-1),C=l("h2",{id:"vercel"},[l("a",{class:"header-anchor",href:"#vercel","aria-hidden":"true"},"#"),s(" Vercel")],-1),T=l("p",null,[s("要通过 "),l("a",{href:"https://vercel.com/docs/git",target:"_blank",rel:"noopener noreferrer"},"Vercel for Git"),s(" 部署你的 Vite 应用，请确保它已被推送至一个 Git 仓库。")],-1),L=l("p",null,[s("进入 "),l("a",{href:"https://vercel.com/import/git",target:"_blank",rel:"noopener noreferrer"},"https://vercel.com/import/git"),s(" 并根据你的 Git 托管服务（GitHub, GitLab 或 BitBucket）将项目导入 Vercel。根据指引，选择带有 "),l("code",null,"package.json"),s(" 的项目根目录。并使用 "),l("code",null,"npm run build"),s(" 来覆写构建步骤，并将输出目录设置为 "),l("code",null,"./dist"),s("。")],-1),x=l("p",null,[l("img",{src:"/vite-docs/assets/vercel-configuration.fed410b3.png",alt:"覆写 Vercel 配置"})],-1),B=l("p",null,"在项目被导入之后，所有后续的推送都将生成预览部署，但只有对生产分支（通常是 “main”）所做的更改才会触发生产部署。",-1),W=l("p",null,[s("一旦部署，你会得到一个实时查看应用的 URL，如 "),l("a",{href:"https://vite.vercel.app",target:"_blank",rel:"noopener noreferrer"},"https://vite.vercel.app"),s("。")],-1),D=l("h2",{id:"azure-static-web-apps"},[l("a",{class:"header-anchor",href:"#azure-static-web-apps","aria-hidden":"true"},"#"),s(" Azure 的静态网站应用")],-1),F=l("p",null,[s("你可以通过微软 Azure 的 "),l("a",{href:"https://aka.ms/staticwebapps",target:"_blank",rel:"noopener noreferrer"},"静态网站应用"),s(" 服务来快速部署你的 Vite 应用。你只需：")],-1),Y=l("ul",null,[l("li",null,[s("注册 Azure 账号并获取一个订阅（subscription）的 key。可以在 "),l("a",{href:"https://azure.microsoft.com/free",target:"_blank",rel:"noopener noreferrer"},"此处快速完成注册"),s("。")]),l("li",null,[s("将你的应用代码托管到 "),l("a",{href:"https://github.com",target:"_blank",rel:"noopener noreferrer"},"GitHub"),s("。")]),l("li",null,[s("在 "),l("a",{href:"https://code.visualstudio.com",target:"_blank",rel:"noopener noreferrer"},"VSCode"),s(" 中安装 "),l("a",{href:"https://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-azurestaticwebapps",target:"_blank",rel:"noopener noreferrer"},"SWA 扩展"),s("。")])],-1),K=l("p",null,"安装完此扩展后，进入你应用的根目录。打开 SWA 的扩展程序，登录 Azure，并点击 '+'，来创建一个全新的 SWA。系统会提示你指定所需的订阅 key。",-1),q=l("p",null,[s("按照扩展程序的启动向导，给你的应用程序起个名字，选择框架预设，并指定应用程序的根目录（通常为 "),l("code",null,"/"),s("）以及构建文件的路径 "),l("code",null,"/dist"),s("。此向导完成后，会在你的 repo 中的 "),l("code",null,".github"),s(" 文件夹中创建一个 Github Action。")],-1),J=l("p",null,"这个 action 致力于部署你的应用程序（可以在仓库的 Actions 标签中，查看相关进度），成功完成后，你可以点击 Github 中出现的 “浏览站点” 的按钮，查看你的应用程序。",-1);t.render=function(l,s,a,t,Q,X){return n(),e("div",null,[o,u,r,c,i,p,d,k,h,g,b,m,f,v,y,E,R,_,A,S,G,P,w,N,U,j,H,M,O,$,z,I,V,C,T,L,x,B,W,D,F,Y,K,q,J])};export default t;export{a as __pageData};
